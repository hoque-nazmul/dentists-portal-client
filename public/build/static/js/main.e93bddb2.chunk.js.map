{"version":3,"sources":["images/Mask Group 1.png","components/Header/Header.js","components/Treatments/Treatments.js","components/GetAppointment/GetAppointment.js","components/NotFound/NotFound.js","components/Navbar/Navbar.js","components/Admin/Children/AdminNavbar/AdminNavbar.js","components/Admin/Children/AdminSideBar/AdminSideBar.js","components/Admin/Dashboard/Dashboard.js","components/Admin/Appointments/Appointments.js","components/Admin/Patients/Patients.js","components/Admin/GetPrescriptions/GetPrescriptions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","headerImg","alt","Treatments","props","treatment","name","time","space","onClick","handleBookedAppointment","GetAppointment","useState","Date","date","setDate","treatments","setTreatments","appointmentInfo","setAppointmentInfo","appointmentForm","setAppointmentForm","appointmentMsg","setAppointmentMsg","useEffect","fetch","then","res","json","data","bookedAppointment","bookedName","bookedTime","bookedDate","toLocaleDateString","useForm","register","handleSubmit","errors","setTimeout","window","location","pathname","style","display","onChange","value","img","length","map","key","id","_id","onSubmit","method","body","JSON","stringify","headers","response","appointment","ref","required","placeholder","email","phone","readOnly","type","NotFound","href","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","target","AdminNavbar","aria-describedby","role","aria-haspopup","aria-labelledby","AdminSideBar","icon","faChartLine","faCalendarCheck","faUserFriends","faFileAlt","faCog","Dashboard","appointments","setAppointments","dataForPrescribing","setDataForPrescribing","prescribedInfo","setPrescribedInfo","prescribedMsg","setPrescrivedMsg","todayAppointments","filter","totalPetient","i","indexOf","push","fontSize","scope","handlePrescription","faPen","prescribedData","medicineOne","medicineTwo","advice","Appointments","activeAppointment","setActiveAppointment","localDate","colSpan","Patients","GetPrescriptions","prescriptions","setPrescriptions","prescription","App","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e93bddb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mask Group 1.f112c368.png\";","import React from 'react';\r\nimport './Header.css'\r\nimport headerImg from '../../images/Mask Group 1.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"HeaderSection d-flex align-items-center\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row align-items-center justify-content-between\">\r\n                    <div className=\"col-md-5\">\r\n                        <div className=\"HeaderLeft\">\r\n                            <h2>Your New Smile Starts Here</h2>\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis commodi nostrum quas, ex suscipit necessitatibus a dignissimos at asperiores labore. Lorem ipsum dolor sit amet.</p>\r\n                            <Link to=\"/getAppointment\"><button className=\"mainBtn\">Get Appointment</button></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"HeaderRight\">\r\n                            <img src={headerImg} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Treatments.css'\r\n\r\nconst Treatments = (props) => {\r\n    const { name, time, space } = props.treatment;\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className=\"TreatmentContent\">\r\n                <h4>{name}</h4>\r\n                <h6>{time}</h6>\r\n                <p>{space} spaces are available</p>\r\n                <button onClick={() => props.handleBookedAppointment(props.treatment) } className=\"mainBtn\">Book Appointment</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Treatments;","import React, { useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport img from '../../images/Mask Group 1.png'\r\nimport { useState } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './GetAppointment.css'\r\nimport Treatments from '../Treatments/Treatments';\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst GetAppointment = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [treatments, setTreatments] = useState([]);\r\n    const [appointmentInfo, setAppointmentInfo] = useState(null);\r\n    const [appointmentForm, setAppointmentForm] = useState(null);\r\n    const [appointmentMsg, setAppointmentMsg] = useState(null);\r\n\r\n    // GET Treatments lists from Server\r\n    useEffect(() => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/getTreatments')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreatments(data);\r\n            })\r\n    }, []);\r\n\r\n    // Stored Clicked Date to State\r\n    const onChange = date => {\r\n        setDate(date);\r\n    }\r\n\r\n    // Stored Appointment Data to State\r\n    const handleBookedAppointment = (bookedAppointment) => {\r\n        const bookedName = bookedAppointment.name;\r\n        const bookedTime = bookedAppointment.time;\r\n        const bookedDate = date.toLocaleDateString();\r\n        const bookedData = { bookedName, bookedTime, bookedDate }\r\n        setAppointmentInfo(bookedData);\r\n        setAppointmentForm(true);\r\n    }\r\n\r\n    // Handle Appointment Submission\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const onSubmit = data => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/addAppointment', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(appointment => {\r\n                setAppointmentMsg(appointment);\r\n            })\r\n    }\r\n\r\n    // After Getting Appointment Redirect to Homepage\r\n    if(appointmentMsg) {\r\n        setTimeout( () => {\r\n            window.location.pathname = '/';\r\n        }, 5000)\r\n    }\r\n\r\n    return (\r\n        <div className=\"GetAppointmentSection\">\r\n            {\r\n                <div style={{ display: appointmentForm ? 'none' : 'block' }} className=\"GetAppointmentInfo\">\r\n                    <div className=\"GetAppointmentTop\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"GetAppointmentCalender\">\r\n                                        <h2 className=\"mb-3\">Appointment Date</h2>\r\n                                        <div className=\"Calender\">\r\n                                            <Calendar\r\n                                                onChange={onChange}\r\n                                                value={date}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"GetAppointmentImg\">\r\n                                        <img src={img} alt=\"\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"GetAppointmentBottom\">\r\n                        <div className=\"container\">\r\n                            <h2>Available Appointments on {date.toLocaleDateString()}</h2>\r\n                            {\r\n                                treatments.length > 0 ?\r\n                                    <div className=\"row justify-content-around\">\r\n                                        {\r\n                                            treatments.map(data => <Treatments key={data.key} handleBookedAppointment={handleBookedAppointment} treatment={data}></Treatments>)\r\n                                        }\r\n                                    </div>\r\n                                    : <div id=\"preloder\">\r\n                                        <div className=\"loader\"></div>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                <div style={{ display: appointmentForm ? 'block' : 'none' }} className=\"AppointmentStoredForm\">\r\n                    <div className=\"AppointmentFormWrapper\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-8 offset-md-2\">\r\n                                    {\r\n                                        appointmentInfo &&\r\n                                        <div className=\"FormContent\">\r\n                                            {\r\n                                                appointmentMsg ?\r\n                                                    <div className=\"AppointmentMsg\">\r\n                                                        <h2>Thanks {appointmentMsg.name} for Appointment</h2>\r\n                                                        <p>Your Appointment ID: {appointmentMsg._id}</p>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div>\r\n                                                        <h2>{appointmentInfo.bookedName}</h2>\r\n                                                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                                                            <select name=\"time\" id=\"data\" ref={register({ required: true })}>\r\n                                                                {treatments.map(treatment => <option key={treatment.key} value={treatment.time}>{treatment.time}</option>)}\r\n                                                            </select>\r\n                                                            {errors.time && <span className=\"inputError\">Time is required</span>}\r\n\r\n                                                            <input name=\"name\" ref={register({ required: true })} placeholder=\"Your Name\" />\r\n                                                            {errors.name && <span className=\"inputError\">Name is required</span>}\r\n\r\n                                                            <input name=\"email\" ref={register({ required: true })} placeholder=\"Your Email\" />\r\n                                                            {errors.email && <span className=\"inputError\">Email is required</span>}\r\n\r\n                                                            <input name=\"phone\" ref={register({ required: true })} placeholder=\"Your Phone\" />\r\n                                                            {errors.phone && <span className=\"inputError\">Phone is required</span>}\r\n\r\n                                                            <input name=\"date\" ref={register({ required: true })} value={appointmentInfo.bookedDate} readOnly />\r\n\r\n                                                            <input type=\"submit\" className=\"mainBtn\" value=\"Send\" />\r\n                                                        </form>\r\n                                                    </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetAppointment;","import React from 'react';\r\nimport './NotFound.css'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div id=\"notfound\">\r\n\t\t<div className=\"notfound\">\r\n\t\t\t<div className=\"notfound-404\">\r\n\t\t\t\t<h1>Oops!</h1>\r\n\t\t\t</div>\r\n\t\t\t<h2>404 - Page not found</h2>\r\n\t\t\t<p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n\t\t\t<a href=\"/\">Go To Homepage</a>\r\n\t\t</div>\r\n\t</div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"NavbarSection\">\r\n            <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top bg-transparent\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/doctorsDashboard\" target=\"_blank\">Doctor's Dashboard</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/doctorsAppointment\" target=\"_blank\">Doctor's Appointemnt</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/patients\" target=\"_blank\">Patients</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/getPrescription\" target=\"_blank\">Prescriptions</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/404\" target=\"_blank\">Review</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/404\" target=\"_blank\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst AdminNavbar = () => {\r\n    return (\r\n        <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\" target=\"_blank\">Dentists Portal</a><button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"/hello\"><i className=\"fas fa-bars\"></i></button>\r\n            <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\r\n                <div className=\"input-group\">\r\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ul className=\"navbar-nav ml-auto ml-md-0\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"/hello\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\"></i></a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"/hello\">Settings</a><a className=\"dropdown-item\" href=\"/hello\">Activity Log</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\" href=\"login.html\">Logout</a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default AdminNavbar;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faChartLine, faCalendarCheck, faUserFriends, faFileAlt, faCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AdminSideBar = () => {\r\n    return (\r\n        <div id=\"layoutSidenav_nav\">\r\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n                <div className=\"sb-sidenav-menu\">\r\n                    <div className=\"nav  mt-4\">\r\n                        <a className=\"nav-link\" href=\"/doctorsDashboard\"\r\n                        ><div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faChartLine} /></div>\r\n                                Doctor's Dashboard</a>\r\n                        <a className=\"nav-link\" href=\"/doctorsAppointment\"\r\n                        ><div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faCalendarCheck} /></div>\r\n                                Doctor's Appointment</a>\r\n                        <a className=\"nav-link\" href=\"/patients\"\r\n                        ><div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faUserFriends} /></div>\r\n                                Patients</a>\r\n                        <a className=\"nav-link\" href=\"/getPrescription\"><div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faFileAlt} /></div>\r\n                                Prescriptions</a>\r\n                        <a className=\"nav-link\" href=\"/hello\" target=\"_blank\"\r\n                        ><div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faCog} /></div>\r\n                                Settings</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminSideBar;","import React from 'react';\r\nimport './Dashboard.css'\r\nimport AdminNavbar from '../Children/AdminNavbar/AdminNavbar';\r\nimport AdminSideBar from '../Children/AdminSideBar/AdminSideBar';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst Dashboard = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [dataForPrescribing, setDataForPrescribing] = useState(null);\r\n    const [prescribedInfo, setPrescribedInfo] = useState(null);\r\n    const [prescribedMsg, setPrescrivedMsg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/getAppointments')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAppointments(data);\r\n            })\r\n    }, [])\r\n\r\n    const todayAppointments = appointments.filter(data => data.date === new Date().toLocaleDateString());\r\n    const totalPetient = [];\r\n    for (let i = 0; i < appointments.length; i++) {\r\n        const data = appointments[i];\r\n        const name = data.name;\r\n        if (totalPetient.indexOf(name) === -1) {\r\n            totalPetient.push(name);\r\n        }\r\n    }\r\n\r\n    // Handle Prescription\r\n    const handlePrescription = (dataForPrescribing) => {\r\n        setDataForPrescribing(dataForPrescribing);\r\n    }\r\n\r\n    // Handle Send Prescrition\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const onSubmit = prescribedData => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/addPrescription', {\r\n            method: 'POST',\r\n            body: JSON.stringify(prescribedData),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(prescribedInfo => {\r\n                setPrescribedInfo(prescribedInfo);\r\n                setPrescrivedMsg(`${prescribedInfo.name} is prescribed.`);\r\n            })\r\n    }\r\n\r\n    // Redirect\r\n    if (prescribedInfo) {\r\n        setTimeout(() => {\r\n            window.location.pathname = '/getPrescription'\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div className=\"AdminPanel\">\r\n            {/* Admin Navbar */}\r\n            <AdminNavbar></AdminNavbar>\r\n            {/* Admin Navbar */}\r\n            <div id=\"layoutSidenav\">\r\n                {/* Admin SideBar */}\r\n                <AdminSideBar></AdminSideBar>\r\n                {/* Admin SideBar */}\r\n                <div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                        {\r\n                            <div style={{ display: dataForPrescribing && 'none' }} className=\"container-fluid\">\r\n                                <h1 className=\"my-2\" style={{ fontSize: '30px' }}>Doctor's Dashboard</h1>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-3 col-md-6\">\r\n                                        <div className=\"dashboardTop one\">\r\n                                            <div className=\"dashboardTopContent d-flex align-items-center justify-content-center\">\r\n                                                <h2>{appointments.length}</h2>\r\n                                                <div className=\"dashboradContentPara\">\r\n                                                    <p>Pending</p>\r\n                                                    <p>Appointments</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-6\">\r\n                                        <div className=\"dashboardTop two\">\r\n                                            <div className=\"dashboardTopContent d-flex align-items-center justify-content-center\">\r\n                                                <h2>{todayAppointments.length}</h2>\r\n                                                <div className=\"dashboradContentPara\">\r\n                                                    <p>Today's</p>\r\n                                                    <p>Appointments</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-6\">\r\n                                        <div className=\"dashboardTop three\">\r\n                                            <div className=\"dashboardTopContent d-flex align-items-center justify-content-center\">\r\n                                                <h2>{appointments.length}</h2>\r\n                                                <div className=\"dashboradContentPara\">\r\n                                                    <p>Total</p>\r\n                                                    <p>Appointments</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-6\">\r\n                                        <div className=\"dashboardTop four\">\r\n                                            <div className=\"dashboardTopContent d-flex align-items-center justify-content-center\">\r\n                                                <h2>{totalPetient.length}</h2>\r\n                                                <div className=\"dashboradContentPara\">\r\n                                                    <p>Total</p>\r\n                                                    <p>Patients</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"AppointmentDataTable\">\r\n                                    <h2>Appointments Data Table</h2>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Date</th>\r\n                                                <th scope=\"col\">Time</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Contact</th>\r\n                                                <th scope=\"col\">Prescription</th>\r\n                                                <th scope=\"col\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Date</th>\r\n                                                <th scope=\"col\">Time</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Contact</th>\r\n                                                <th scope=\"col\">Prescription</th>\r\n                                                <th scope=\"col\">Action</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            {\r\n                                                appointments.length > 0 ?\r\n                                                    appointments.map(appointment => <tr key={appointment._id}>\r\n                                                        <td>{appointment.date}</td>\r\n                                                        <td>{appointment.time}</td>\r\n                                                        <td>{appointment.name}</td>\r\n                                                        <td>{appointment.phone}</td>\r\n                                                        <td>\r\n                                                            <button onClick={() => handlePrescription(appointment)} className=\"mainBtn\">Prescribe</button>\r\n                                                        </td>\r\n                                                        <td><button className=\"TableActionBtn\">Pending</button><button className=\"btnIcon\"><FontAwesomeIcon icon={faPen} /></button></td>\r\n                                                    </tr>)\r\n                                                    : <tr id=\"preloder\"><td className=\"loader\"></td></tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            <div style={{ display: dataForPrescribing ? 'block' : 'none' }} className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 offset-md-2\">\r\n                                        <div className=\"FormContent mt-4\">\r\n                                            {\r\n                                                dataForPrescribing &&\r\n                                                <div>\r\n                                                    {\r\n                                                        prescribedMsg ?\r\n                                                        <div className=\"AppointmentMsg\">\r\n                                                            <h2>{prescribedMsg}</h2>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div>\r\n                                                            <h2>Prescription Form</h2>\r\n                                                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                                                <input type=\"hidden\" name=\"patient_id\" ref={register({ required: true })} value={dataForPrescribing._id} />\r\n\r\n                                                                <input name=\"name\" ref={register({ required: true })} value={dataForPrescribing.name} readOnly />\r\n\r\n                                                                <input name=\"email\" ref={register({ required: true })} value={dataForPrescribing.email} readOnly />\r\n\r\n                                                                <input name=\"medicineOne\" ref={register({ required: true })} placeholder=\"1 No. Medicine\" />\r\n                                                                {errors.medicineOne && <span className=\"inputError\">Medicine is required</span>}\r\n\r\n                                                                <input name=\"medicineTwo\" ref={register({ required: true })} placeholder=\"2 No. Medicine\" />\r\n                                                                {errors.medicineTwo && <span className=\"inputError\">Medicine is required</span>}\r\n\r\n                                                                <input name=\"advice\" ref={register({ required: true })} placeholder=\"Your Advice\" />\r\n                                                                {errors.advice && <span className=\"inputError\">Advice is required</span>}\r\n\r\n                                                                <input type=\"submit\" className=\"mainBtn\" value=\"Send\" />\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                    <footer className=\"py-4 bg-light mt-auto\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"d-flex align-items-center justify-content-between small\">\r\n                                <div className=\"text-muted\">&copy; All copyright Reserved | Nazmul Hoque</div>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport '../../Admin/Dashboard/Dashboard.css'\r\nimport './Appointments.css'\r\nimport AdminNavbar from '../Children/AdminNavbar/AdminNavbar';\r\nimport AdminSideBar from '../Children/AdminSideBar/AdminSideBar';\r\nimport Calendar from 'react-calendar';\r\nimport { useState } from 'react';\r\n\r\nconst Appointments = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [activeAppointment, setActiveAppointment] = useState(null);\r\n\r\n    // const today = new Date().toLocaleDateString();\r\n    //     fetch('https://pacific-sierra-92196.herokuapp.com/appointmentsByToday', {\r\n    //         method: 'POST',\r\n    //         body: JSON.stringify({today}),\r\n    //         headers: {\r\n    //             \"Content-type\": \"application/json; charset=UTF-8\"\r\n    //         }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(todayAppointments => {\r\n    //             setTodayAppointments(todayAppointments);\r\n    //             console.log(todayAppointments);\r\n    //         })\r\n\r\n    // Stored Clicked Date to State\r\n    const onChange = date => {\r\n        const localDate = date.toLocaleDateString();\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/appointmentsByDate', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ localDate }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(appointment => {\r\n                setAppointments(appointment);\r\n                setActiveAppointment(true);\r\n            })\r\n        setDate(date);\r\n    }\r\n    return (\r\n        <div className=\"Appointment\">\r\n            {/* Admin Navbar */}\r\n            <AdminNavbar></AdminNavbar>\r\n            {/* Admin Navbar */}\r\n            <div id=\"layoutSidenav\">\r\n                {/* Admin SideBar */}\r\n                <AdminSideBar></AdminSideBar>\r\n                {/* Admin SideBar */}\r\n                <div id=\"layoutSidenav_content\">\r\n                    <main className=\"pb-5 px-2\">\r\n                        <div className=\"container-fluid\">\r\n                            <h1 className=\"mt-2 mb-4 ml-2\">Appointments</h1>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-6 col-md-6 col-sm-12\">\r\n                                    <div className=\"Calender\">\r\n                                        <Calendar\r\n                                            onChange={onChange}\r\n                                            value={date}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-xl-6 col-md-6 col-sm-12\">\r\n                                    <div className=\"AppointmentByDate\">\r\n                                        <div className=\"TableHeader d-flex justify-content-between\">\r\n                                            <h4>Appointments</h4>\r\n                                            <p>Date: {date.toLocaleDateString()}</p>\r\n                                        </div>\r\n                                        <table className=\"table table-borderless\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Patient Name</th>\r\n                                                    <th scope=\"col\">Scedule</th>\r\n                                                    <th scope=\"col\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            {\r\n                                                activeAppointment ?\r\n                                                <tbody>\r\n                                                {\r\n                                                    appointments.length > 0 ?\r\n                                                    appointments.map(data => <tr key={data._id}>\r\n                                                        <td>{data.name}</td>\r\n                                                        <td>{data.time}</td>\r\n                                                        <td><button className=\"TableActionBtn\">Not Visited</button></td>\r\n                                                    </tr>)\r\n                                                    : <tr><td colSpan='3' className=\"alertAppointment\">You haven't any appointment on this date.</td></tr>\r\n                                                }\r\n                                                </tbody>\r\n                                                :<tbody><tr><td colSpan='3' className=\"alertAppointment\">You have to select a date to show Appointments by selected date.</td></tr></tbody>\r\n                                            }\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </main>\r\n                    <footer className=\"py-4 mt-auto\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"d-flex align-items-center justify-content-between small\">\r\n                                <div className=\"text-muted\">&copy; All copyright Reserved | Nazmul Hoque</div>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Appointments;","import React from 'react';\r\nimport '../Dashboard/Dashboard.css'\r\nimport AdminNavbar from '../Children/AdminNavbar/AdminNavbar';\r\nimport AdminSideBar from '../Children/AdminSideBar/AdminSideBar';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst Patients = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/getAppointments')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAppointments(data);\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"AdminPanel\">\r\n            {/* Admin Navbar */}\r\n            <AdminNavbar></AdminNavbar>\r\n            {/* Admin Navbar */}\r\n            <div id=\"layoutSidenav\">\r\n                {/* Admin SideBar */}\r\n                <AdminSideBar></AdminSideBar>\r\n                {/* Admin SideBar */}\r\n                <div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                        <div className=\"container-fluid\">\r\n                            <h1 className=\"my-2\" style={{ fontSize: '30px' }}>Patients</h1>\r\n                            \r\n\r\n                            <div className=\"AppointmentDataTable\">\r\n                                <h2>All Patients List</h2>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Email</th>\r\n                                            <th scope=\"col\">Phone</th>\r\n                                            <th scope=\"col\">Appointment Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tfoot>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Email</th>\r\n                                            <th scope=\"col\">Phone</th>\r\n                                            <th scope=\"col\">Appointment Date</th>\r\n                                        </tr>\r\n                                    </tfoot>\r\n                                    <tbody>\r\n                                        {\r\n                                            appointments.length > 0 ?\r\n                                                appointments.map(appointment => <tr key={appointment._id}>\r\n                                                    <td>{appointment.name}</td>\r\n                                                    <td>{appointment.email}</td>\r\n                                                    <td>{appointment.phone}</td>\r\n                                                    <td>{appointment.date}</td>\r\n                                                </tr>)\r\n                                                : <tr id=\"preloder\"><td className=\"loader\"></td></tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </main>\r\n                    <footer className=\"py-4 bg-light mt-auto\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"d-flex align-items-center justify-content-between small\">\r\n                                <div className=\"text-muted\">&copy; All copyright Reserved | Nazmul Hoque</div>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","import React from 'react';\r\nimport '../Dashboard/Dashboard.css'\r\nimport AdminNavbar from '../Children/AdminNavbar/AdminNavbar';\r\nimport AdminSideBar from '../Children/AdminSideBar/AdminSideBar';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst GetPrescriptions = () => {\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://pacific-sierra-92196.herokuapp.com/getPrescription')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPrescriptions(data);\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"AdminPanel\">\r\n            {/* Admin Navbar */}\r\n            <AdminNavbar></AdminNavbar>\r\n            {/* Admin Navbar */}\r\n            <div id=\"layoutSidenav\">\r\n                {/* Admin SideBar */}\r\n                <AdminSideBar></AdminSideBar>\r\n                {/* Admin SideBar */}\r\n                <div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                        <div className=\"container-fluid\">\r\n                            <h1 className=\"my-2\" style={{ fontSize: '30px' }}>Prescription</h1>\r\n                            \r\n\r\n                            <div className=\"AppointmentDataTable\">\r\n                                <h2>All Prescriptions List</h2>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Patient's Name</th>\r\n                                            <th scope=\"col\">Medicine (No.1)</th>\r\n                                            <th scope=\"col\">Medicine (No.2)</th>\r\n                                            <th scope=\"col\">Advice</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tfoot>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Patient's Name</th>\r\n                                            <th scope=\"col\">Medicine (No.1)</th>\r\n                                            <th scope=\"col\">Medicine (No.2)</th>\r\n                                            <th scope=\"col\">Advice</th>\r\n                                        </tr>\r\n                                    </tfoot>\r\n                                    <tbody>\r\n                                        {\r\n                                            prescriptions.length > 0 ?\r\n                                            prescriptions.map(prescription => <tr key={prescription._id}>\r\n                                                    <td>{prescription.name}</td>\r\n                                                    <td>{prescription.medicineOne}</td>\r\n                                                    <td>{prescription.medicineTwo}</td>\r\n                                                    <td>{prescription.advice}</td>\r\n                                                </tr>)\r\n                                                : <tr id=\"preloder\"><td className=\"loader\"></td></tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </main>\r\n                    <footer className=\"py-4 bg-light mt-auto\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"d-flex align-items-center justify-content-between small\">\r\n                                <div className=\"text-muted\">&copy; All copyright Reserved | Nazmul Hoque</div>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetPrescriptions;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GetAppointment from './components/GetAppointment/GetAppointment';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NotFound from './components/NotFound/NotFound';\nimport Navbar from './components/Navbar/Navbar';\nimport Dashboard from './components/Admin/Dashboard/Dashboard';\nimport Appointments from './components/Admin/Appointments/Appointments';\nimport Patients from './components/Admin/Patients/Patients';\nimport GetPrescriptions from './components/Admin/GetPrescriptions/GetPrescriptions';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/getAppointment\">\n            <Navbar></Navbar>\n            <GetAppointment></GetAppointment>\n          </Route>\n          <Route path=\"/doctorsDashboard\">\n            <Dashboard></Dashboard>\n          </Route>\n          <Route path=\"/doctorsAppointment\">\n            <Appointments></Appointments>\n          </Route>\n          <Route path=\"/getPrescription\">\n            <GetPrescriptions></GetPrescriptions>\n          </Route>\n          <Route path=\"/patients\">\n            <Patients></Patients>\n          </Route>\n          <Route exact path=\"/\">\n            <Navbar></Navbar>\n            <Header></Header>\n          </Route>\n          <Route path=\"*\">\n            <NotFound></NotFound>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}